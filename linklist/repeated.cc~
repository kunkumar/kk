#include <iostream>
#include <stdio.h>
#include <malloc.h>

using namespace std;

void get2NonRepeatingNos(int arr[], int n, int *x, int *y)
{
  int val = arr[0]; /* Will hold val of all elements */
  int set_bit_no;  /* Will have only single set bit of val */
  int i;
  *x = 0;
  *y = 0; 
 
  /* Get the val of all elements */
  for(i = 1; i < n; i++)
   	{val ^= arr[i];}
 
  /* Get the rightmost set bit in set_bit_no */
  set_bit_no = val & ~(val-1);
 
  /* Now divide elements in two sets by comparing rightmost set
   bit of val with bit at same position in each element. */
  for(i = 0; i < n; i++)
  {
    if(arr[i] & set_bit_no)
     *x = *x ^ arr[i]; /*val of first set */
    else
     *y = *y ^ arr[i]; /*val of second set*/
  }
}     
 
/* Driver program to test above function */
int main()
{
  int arr[] = {2, 3, 7, 9,8, 11, 2, 3, 11};
  int *x = (int *)malloc(sizeof(int));
  int *y = (int *)malloc(sizeof(int));
  get2NonRepeatingNos(arr, 8, x, y);
  printf("The non-repeating elements are %d and %d \n", *x, *y);
  return 0;
}
